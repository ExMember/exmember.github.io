#!/usr/bin/env ruby

# frozen_string_literal: true

require 'json'
require 'time'
require 'yaml'

class Tweet
  attr_accessor :data

  TWITTER_HANDLE = 'ExMember'

  def initialize(data)
    @data = data
  end

  def id
    data['tweet']['id']
  end

  def created_at
    Time.parse(data['tweet']['created_at']).localtime
  end

  def date
    created_at.to_date
  end

  def text
    text = full_text

    url_entities.each do |url_entity|
      text.gsub! " #{url_entity['url']}", ''
    end

    text
  end

  def full_text
    data['tweet']['full_text']
  end

  def url
    "https://twitter.com/#{TWITTER_HANDLE}/status/#{id}"
  end

  def urls
    url_entities.map do |entity|
      entity["expanded_url"]
    end
  end

  def url_entities
    data['tweet']['entities']['urls']
  end

  def retweet?
    full_text.match /^RT @\w+:/
  end

  def reply?
    ! in_reply_to_id.nil?
  end

  def in_reply_to_id
    data['tweet']['in_reply_to_status_id']
  end

  def to_markdown
    <<~MARKDOWN
      #{YAML.dump(markdown_metadata).chomp}
      ---
      #{text}
    MARKDOWN
  end

  def markdown_metadata
    {
      'category' => 'microblog',
      'tags' => ['twitter'],
      'tweet_url' => url,
      'links' => urls,
    }
  end

  def file_path
    "_posts/#{date.iso8601}-tweet-#{id}.md"
  end

  def export_to_file
    File.open(file_path, 'w') do |file|
      file.write to_markdown
    end
  end

  def self.from_archive(file_path)
    raw_data = File.read(file_path)
    json_string = raw_data.sub!(/^(.*)\n/, '[')

    JSON.parse(json_string).map do |tweet_data|
      Tweet.new(tweet_data)
    end
  end
end

tweets_to_publish =
  Tweet
  .from_archive('_data/tweets.js')
  .reject(&:retweet?)
  .reject(&:reply?)

tweets_to_publish.map(&:export_to_file)
